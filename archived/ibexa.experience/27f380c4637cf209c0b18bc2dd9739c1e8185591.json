{
    "manifests": {
        "ibexa/experience": {
            "manifest": {
                "bundles": {
                    "Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle": [
                        "all"
                    ],
                    "Symfony\\Bundle\\SecurityBundle\\SecurityBundle": [
                        "all"
                    ],
                    "Symfony\\Bundle\\TwigBundle\\TwigBundle": [
                        "all"
                    ],
                    "Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle": [
                        "all"
                    ],
                    "Symfony\\Bundle\\MonologBundle\\MonologBundle": [
                        "all"
                    ],
                    "Symfony\\WebpackEncoreBundle\\WebpackEncoreBundle": [
                        "all"
                    ],
                    "Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle": [
                        "all"
                    ],
                    "Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle": [
                        "all"
                    ],
                    "Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle": [
                        "all"
                    ],
                    "Bazinga\\Bundle\\JsTranslationBundle\\BazingaJsTranslationBundle": [
                        "all"
                    ],
                    "FOS\\JsRoutingBundle\\FOSJsRoutingBundle": [
                        "all"
                    ],
                    "FOS\\HttpCacheBundle\\FOSHttpCacheBundle": [
                        "all"
                    ],
                    "JMS\\TranslationBundle\\JMSTranslationBundle": [
                        "all"
                    ],
                    "Liip\\ImagineBundle\\LiipImagineBundle": [
                        "all"
                    ],
                    "Nelmio\\CorsBundle\\NelmioCorsBundle": [
                        "all"
                    ],
                    "Oneup\\FlysystemBundle\\OneupFlysystemBundle": [
                        "all"
                    ],
                    "Knp\\Bundle\\MenuBundle\\KnpMenuBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Core\\IbexaCoreBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\LegacySearchEngine\\IbexaLegacySearchEngineBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\IO\\IbexaIOBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Debug\\IbexaDebugBundle": [
                        "dev",
                        "test",
                        "behat"
                    ],
                    "Ibexa\\Bundle\\HttpCache\\IbexaHttpCacheBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Rest\\IbexaRestBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Solr\\IbexaSolrBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\SystemInfo\\IbexaSystemInfoBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Cron\\IbexaCronBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\RepositoryInstaller\\IbexaRepositoryInstallerBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\DoctrineSchema\\DoctrineSchemaBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\ContentForms\\IbexaContentFormsBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\DesignEngine\\IbexaDesignEngineBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\StandardDesign\\IbexaStandardDesignBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\FieldTypeRichText\\IbexaFieldTypeRichTextBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\AdminUi\\IbexaAdminUiBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\User\\IbexaUserBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\AdminUiAssets\\IbexaAdminUiAssetsBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\FieldTypeMatrix\\IbexaFieldTypeMatrixBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\GraphQL\\IbexaGraphQLBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\FieldTypeQuery\\IbexaFieldTypeQueryBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Search\\IbexaSearchBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Fastly\\IbexaFastlyBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\PageBuilder\\IbexaPageBuilderBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\FieldTypePage\\IbexaFieldTypePageBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\FormBuilder\\IbexaFormBuilderBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Scheduler\\IbexaSchedulerBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Workflow\\IbexaWorkflowBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Calendar\\IbexaCalendarBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\SiteFactory\\IbexaSiteFactoryBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\VersionComparison\\IbexaVersionComparisonBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Installer\\IbexaInstallerBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Icons\\IbexaIconsBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Elasticsearch\\IbexaElasticsearchBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Permissions\\IbexaPermissionsBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Connector\\Dam\\IbexaConnectorDamBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Segmentation\\IbexaSegmentationBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Personalization\\IbexaPersonalizationBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Seo\\IbexaSeoBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Measurement\\IbexaMeasurementBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Migration\\IbexaMigrationBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\ImageEditor\\IbexaImageEditorBundle": [
                        "all"
                    ],
                    "Overblog\\GraphQLBundle\\OverblogGraphQLBundle": [
                        "all"
                    ],
                    "Overblog\\GraphiQLBundle\\OverblogGraphiQLBundle": [
                        "dev"
                    ],
                    "Twig\\Extra\\TwigExtraBundle\\TwigExtraBundle": [
                        "all"
                    ],
                    "BabDev\\PagerfantaBundle\\BabDevPagerfantaBundle": [
                        "all"
                    ],
                    "Hautelook\\TemplatedUriBundle\\HautelookTemplatedUriBundle": [
                        "all"
                    ],
                    "Lexik\\Bundle\\JWTAuthenticationBundle\\LexikJWTAuthenticationBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\OAuth2Client\\IbexaOAuth2ClientBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\ProductCatalog\\IbexaProductCatalogBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\Taxonomy\\IbexaTaxonomyBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\TreeBuilder\\IbexaTreeBuilderBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\ContentTree\\IbexaContentTreeBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\FieldTypeAddress\\IbexaFieldTypeAddressBundle": [
                        "all"
                    ],
                    "Ibexa\\Bundle\\CorporateAccount\\IbexaCorporateAccountBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/",
                    "encore/": "/",
                    "templates/": "templates/",
                    "translations/": "translations/",
                    "assets/": "assets/",
                    "src/": "%SRC_DIR%/"
                },
                "env": {
                    "SEARCH_ENGINE": "legacy",
                    "#1": "Uncomment following line if you want to change the purge type.",
                    "#2": "By default it will use `local` purge when running locally",
                    "#3": "and `varnish` for Platform.sh installations.",
                    "#4": "HTTPCACHE_PURGE_TYPE=local",
                    "HTTPCACHE_DEFAULT_TTL": "86400",
                    "HTTPCACHE_PURGE_SERVER": "http://localhost:80",
                    "HTTPCACHE_VARNISH_INVALIDATE_TOKEN": "",
                    "#5": "Uncomment following line if you want to enable translation-aware behavior for HTTP cache.",
                    "#6": "HTTPCACHE_TRANSLATION_AWARE_ENABLED=true",
                    "TRUSTED_PROXIES": "127.0.0.1",
                    "CACHE_POOL": "cache.tagaware.filesystem",
                    "#7": "When using Redis or memcached adapter, you can configure it using DSN:",
                    "#8": "- https://symfony.com/doc/4.4/components/cache/adapters/redis_adapter.html#configure-the-connection",
                    "#9": "- https://symfony.com/doc/4.4/components/cache/adapters/memcached_adapter.html#configure-the-connection",
                    "CACHE_DSN": "localhost",
                    "CACHE_NAMESPACE": "ezp",
                    "DATABASE_CHARSET": "utf8mb4",
                    "DATABASE_COLLATION": "utf8mb4_unicode_520_ci",
                    "#10": "Needed by Doctrine Bundle / ORM to prevent it from opening a connection during situations where there is no service yet.",
                    "#11": "See: https://symfony.com/doc/current/reference/configuration/doctrine.html#doctrine-dbal-configuration",
                    "DATABASE_VERSION": "mariadb-10.3.0",
                    "SESSION_HANDLER_ID": "session.handler.native_file",
                    "SESSION_SAVE_PATH": "%kernel.project_dir%/var/sessions/%kernel.environment%",
                    "SOLR_DSN": "http://localhost:8983/solr",
                    "SOLR_CORE": "collection1",
                    "#12": "Enable Personalization by setting valid id, key and uri",
                    "PERSONALIZATION_CUSTOMER_ID": 0,
                    "PERSONALIZATION_LICENSE_KEY": "",
                    "PERSONALIZATION_HOST_URI": "",
                    "ELASTICSEARCH_DSN": "http://localhost:9200",
                    "#13": "Enable fastly by setting valid service_id and key",
                    "#14": "In order for this to work you also need to have EzSystemsPlatformFastlyCacheBundle installed",
                    "#15": "FASTLY_SERVICE_ID=\"\"",
                    "#16": "FASTLY_KEY=\"\"",
                    "IBEXA_EDITION": "experience",
                    "#20": "Default LOCK_DSN value (semaphore) makes project require additional 'sysvsem' PHP extension.",
                    "#21": "If you have that extension feel free to reconfigure this env value back to 'semaphore'.",
                    "#22": "'flock' is safe replacement and is backward compatible. Required by Symfony Rate Limiter.",
                    "IBEXA_LOCK_DSN": "flock"
                },
                "composer-scripts": {
                    "cache:clear": "symfony-cmd",
                    "assets:install %PUBLIC_DIR%": "symfony-cmd",
                    "yarn install": "script",
                    "ibexa:encore:compile --config-name app": "symfony-cmd",
                    "bazinga:js-translation:dump %PUBLIC_DIR%/assets --merge-domains": "symfony-cmd",
                    "ibexa:encore:compile": "symfony-cmd"
                },
                "post-install-output": [
                    "<fg=red>                                                                                              </>",
                    "<fg=red>       ::::     ./.  `..-..`              ``...``               .....`    `....`              </>",
                    "<fg=red>       oo+/   ./++:/++++++++/:.        .:/++//////:.          -////:` `-://///////-`          </>",
                    "<fg=red>       o/.    /++++++/:---:++++/`    `/+++/:----/////-      -////:`  -/////:--::////:`        </>",
                    "<fg=red>          .   /++++:`       ./+++.  .+++/.     .:///:``-` -////:`   ////-`      `-////`       </>",
                    "<fg=red>        ./+   /+++:          `+++/  +++/`    .////:` :///////:`    -///.          .///:       </>",
                    "<fg=red>       /o++   /+++.           :+++``+++:   .////:`   .//////.      :///            ////       </>",
                    "<fg=red>       oo++   -+++:          `+++/  /++/`./+//:`   `-////////:`    -///.          `////       </>",
                    "<fg=red>       oo++    /+++/.       -++++.  .+++++++:`   .:////-``-////:`  `////-        ./////       </>",
                    "<fg=red>       oo++     :+++++::::/++++/`    ./++++/---://///-`    `-////:`  -////:----:///////       </>",
                    "<fg=red>       oo++      `-/++++++++/:.        .:/++//////:.         `-////:` `-://///////-///.       </>",
                    "<fg=red>       ....          `....``              `.....`               `````     `....`   :.         </>",
                    "<fg=red>                                                                                              </>",
                    "",
                    "<fg=red>Thank you for installing Ibexa DXP!</>",
                    "To finish the installation process:",
                    "    1. Configure the database connection via <comment>DATABASE_URL</> in your <comment>.env</> file.",
                    "    2. Run the following commands:",
                    "       >  <comment>composer recipes:install ibexa/experience --force</>",
                    "          <warning>This will overwrite some of the files.</warning> If you modified any of these reject and update manually.",
                    "       >  <comment>php bin/console ibexa:install</>",
                    "       >  <comment>php bin/console ibexa:graphql:generate-schema</>",
                    "       >  <comment>composer run post-update-cmd</>",
                    "",
                    "Refer to https://doc.ibexa.co/en/latest/getting_started/install_ibexa_dxp for a detailed installation and configuration guide.",
                    "<info>To get started working with Ibexa DXP, see First steps: https://doc.ibexa.co/en/latest/getting_started/first_steps.",
                    "For more in-depth information visit the Documentation center: https://developers.ibexa.co/documentation-hub.",
                    "Check out the Ibexa Blog (https://www.ibexa.co/blog) to get updates and insights on working with Ibexa DXP.</>"
                ]
            },
            "files": {
                "assets/images/conversation-chat-icon.svg": {
                    "contents": [
                        "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                        "<svg width=\"28px\" height=\"28px\" viewBox=\"0 0 28 28\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">",
                        "    <title>Conversation Chat 1</title>",
                        "    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\">",
                        "        <g transform=\"translate(-1189.000000, -748.000000)\" stroke=\"#DB0032\" stroke-width=\"1.10666664\">",
                        "            <g transform=\"translate(1190.000000, 749.000000)\">",
                        "                <path d=\"M8.87546649,14.4087997 L7.76879984,14.4087997 L3.34213327,18.8354663 L3.34213327,14.4087997 L1.12879998,14.4087997 C0.517604866,14.4087997 0.0221333329,13.9133282 0.0221333329,13.3021331 L0.0221333329,1.12879998 C0.0221333329,0.517604866 0.517604866,0.0221333329 1.12879998,0.0221333329 L19.9421329,0.0221333329 C20.553328,0.0221333329 21.0487996,0.517604866 21.0487996,1.12879998 L21.0487996,7.76879984\" id=\"Path\"></path>",
                        "                <path d=\"M11.0887998,19.9421329 C11.0887998,20.553328 11.5842713,21.0487996 12.1954664,21.0487996 L18.282133,21.0487996 L23.2621329,25.4754662 L23.2621329,21.0487996 L24.3687995,21.0487996 C24.9799946,21.0487996 25.4754662,20.553328 25.4754662,19.9421329 L25.4754662,11.0887998 C25.4754662,10.4776047 24.9799946,9.98213313 24.3687995,9.98213313 L12.1954664,9.98213313 C11.5842713,9.98213313 11.0887998,10.4776047 11.0887998,11.0887998 L11.0887998,19.9421329 Z\" id=\"Path\"></path>",
                        "            </g>",
                        "        </g>",
                        "    </g>",
                        "</svg>",
                        ""
                    ],
                    "executable": false
                },
                "assets/images/file-text-info-icon.svg": {
                    "contents": [
                        "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                        "<svg width=\"28px\" height=\"28px\" viewBox=\"0 0 28 28\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">",
                        "    <title>Common File Text Info</title>",
                        "    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\">",
                        "        <g transform=\"translate(-310.000000, -748.000000)\" stroke=\"#DB0032\" stroke-width=\"1.14356732\">",
                        "            <g transform=\"translate(311.000000, 749.000000)\">",
                        "                <line x1=\"4.59714061\" y1=\"9.17140987\" x2=\"15.4610301\" y2=\"9.17140987\" id=\"Path\"></line>",
                        "                <line x1=\"4.59714061\" y1=\"12.6021118\" x2=\"11.4585445\" y2=\"12.6021118\" id=\"Path\"></line>",
                        "                <line x1=\"4.59714061\" y1=\"5.74070793\" x2=\"12.6021118\" y2=\"5.74070793\" id=\"Path\"></line>",
                        "                <line x1=\"4.59714061\" y1=\"16.0328138\" x2=\"9.17140987\" y2=\"16.0328138\" id=\"Path\"></line>",
                        "                <line x1=\"4.59714061\" y1=\"19.4635157\" x2=\"9.17140987\" y2=\"19.4635157\" id=\"Path\"></line>",
                        "                <path d=\"M11.4585445,26.3249196 L1.16643866,26.3249196 C0.534863873,26.3249196 0.0228713463,25.8129271 0.0228713463,25.1813523 L0.0228713463,1.16643866 C0.0228713463,0.534863873 0.534863873,0.0228713463 1.16643866,0.0228713463 L16.367879,0.0228713463 C16.6711471,0.0228713463 16.9619705,0.143461235 17.1763811,0.35793657 L21.4155851,4.59714061 C21.6300605,4.81155117 21.7506503,5.10237458 21.7506503,5.4056427 L21.7506503,9.17140987\" id=\"Path\"></path>",
                        "                <path d=\"M12.6021118,19.4635157 C12.6021118,23.2529644 15.674067,26.3249196 19.4635157,26.3249196 C23.2529644,26.3249196 26.3249196,23.2529644 26.3249196,19.4635157 C26.3249196,15.674067 23.2529644,12.6021118 19.4635157,12.6021118 C15.674067,12.6021118 12.6021118,15.674067 12.6021118,19.4635157 Z\" id=\"Path\"></path>",
                        "                <path d=\"M19.4635157,22.8942177 L19.4635157,18.8917321 C19.4635157,18.5759447 19.2075195,18.3199484 18.8917321,18.3199484 L17.7481647,18.3199484\" id=\"Path\"></path>",
                        "                <path d=\"M18.6058402,15.4610301 C18.7637339,15.4610301 18.8917321,15.5890282 18.8917321,15.7469219 C18.8917321,15.9048156 18.7637339,16.0328138 18.6058402,16.0328138 C18.4479465,16.0328138 18.3199484,15.9048156 18.3199484,15.7469219 C18.3199484,15.5890282 18.4479465,15.4610301 18.6058402,15.4610301\" id=\"Path\"></path>",
                        "                <line x1=\"17.7481647\" y1=\"22.8942177\" x2=\"21.1788667\" y2=\"22.8942177\" id=\"Path\"></line>",
                        "            </g>",
                        "        </g>",
                        "    </g>",
                        "</svg>",
                        ""
                    ],
                    "executable": false
                },
                "assets/images/folder-icon.svg": {
                    "contents": [
                        "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                        "<svg width=\"28px\" height=\"28px\" viewBox=\"0 0 28 28\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">",
                        "    <title>Folder Star</title>",
                        "    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\">",
                        "        <g transform=\"translate(-758.000000, -749.000000)\" stroke=\"#DB0032\" stroke-width=\"1.12853337\">",
                        "            <g transform=\"translate(759.000000, 750.000000)\">",
                        "                <path d=\"M22.5932382,10.179371 L22.5932382,4.53670416 C22.5932382,3.91343239 22.0879766,3.40817079 21.4647048,3.40817079 L10.312538,3.40817079 C9.88520108,3.40794258 9.49464869,3.16635928 9.30362914,2.78409183 L8.2337795,0.646649623 C8.04275994,0.264382178 7.65220755,0.0227988774 7.22487066,0.0225706675 L1.15110404,0.0225706675 C0.527832269,0.0225706675 0.0225706675,0.527832269 0.0225706675,1.15110404 L0.0225706675,18.0791047 C0.0225706675,18.7023764 0.527832269,19.207638 1.15110404,19.207638 L9.05083766,19.207638\" id=\"Path\"></path>",
                        "                <path d=\"M20.0043826,12.9217071 L21.7411955,16.9505713 L25.1211529,16.9505713 C25.4707675,16.9373524 25.7910855,17.144921 25.92185,17.4694295 C26.0526145,17.7939379 25.9657058,18.1656034 25.7046047,18.3984796 L22.7704179,21.0121629 L24.395506,24.750994 C24.5417424,25.1016376 24.4481217,25.5064872 24.1627921,25.7573319 C23.8774626,26.0081767 23.4639555,26.0491637 23.1349342,25.8592137 L19.207638,23.6461598 L15.2803419,25.8592137 C14.9513205,26.0491637 14.5378135,26.0081767 14.2524839,25.7573319 C13.9671544,25.5064872 13.8735337,25.1016376 14.0197701,24.750994 L15.6448582,21.0121629 L12.7106714,18.3984796 C12.4487506,18.1665381 12.3607919,17.7950492 12.4908998,17.4702857 C12.6210077,17.1455222 12.9411249,16.9375181 13.2907375,16.9505713 L16.6763377,16.9505713 L18.4154076,12.9217071 C18.5730099,12.629712 18.8780825,12.4476994 19.2098951,12.4476994 C19.5417077,12.4476994 19.8467803,12.629712 20.0043826,12.9217071 Z\" id=\"Path\"></path>",
                        "            </g>",
                        "        </g>",
                        "    </g>",
                        "</svg>",
                        ""
                    ],
                    "executable": false
                },
                "assets/images/main-background.jpg": {
                    "contents": "",
                    "executable": false
                },
                "assets/scss/welcome-page.scss": {
                    "contents": [
                        "html {",
                        "    position: relative;",
                        "    min-height: 100%;",
                        "}",
                        "body {",
                        "    font-size: 16px;",
                        "    line-height: 26px;",
                        "    color: #131c26;",
                        "    overflow-x: hidden;",
                        "    font-family: 'Noto Sans';",
                        "    margin-bottom: 48px;",
                        "}",
                        ".header {",
                        "    &__container {",
                        "        height: 379px;",
                        "        background-image: url(/assets/images/main-background.jpg);",
                        "        background-size: cover;",
                        "",
                        "        .btn-light {",
                        "            background-color: transparent;",
                        "            border: 1px solid #fff;",
                        "            color: #fff;",
                        "        }",
                        "    }",
                        "}",
                        ".logo {",
                        "    max-width: 117px;",
                        "    max-height: 33px;",
                        "}",
                        "h1 {",
                        "    font-size: 35px;",
                        "    line-height: 44px;",
                        "    font-family: 'Noto Sans';",
                        "    font-weight: 500;",
                        "}",
                        "h2 {",
                        "    font-size: 20px;",
                        "    line-height: 24px;",
                        "    font-family: 'Work Sans';",
                        "    font-weight: 700;",
                        "}",
                        "a {",
                        "    color: #252525;",
                        "",
                        "    &:hover {",
                        "        color: #db0032;",
                        "        text-decoration: none;",
                        "    }",
                        "}",
                        "ul {",
                        "    li:before {",
                        "        content: '\\2022';",
                        "        font-size: 12pt;",
                        "    }",
                        "}",
                        ".footer {",
                        "    position: absolute;",
                        "    bottom: 0;",
                        "    height: 48px;",
                        "    width: 100%;",
                        "",
                        "    .container-fluid {",
                        "        display: flex;",
                        "        align-items: flex-end;",
                        "        height: 100%;",
                        "    }",
                        "}",
                        ".copyright {",
                        "    opacity: 0.6;",
                        "}",
                        ".background-grey {",
                        "    background-color: #f7f7f9;",
                        "}",
                        ".ezrichtext-field {",
                        "    p {",
                        "        margin-bottom: 0;",
                        "    }",
                        "}",
                        ".description {",
                        "    max-width: 625px;",
                        "}",
                        ".references {",
                        "    &-list {",
                        "        &-item__link {",
                        "            padding-left: 15px;",
                        "        }",
                        "    }",
                        "}",
                        ".container--wide {",
                        "    max-width: 1566px;",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/cache_pool/cache.memcached.yaml": {
                    "contents": [
                        "# Reusable service for memcache cache for use in generic.php and plaformsh.php on demand",
                        "#",
                        "# For further reading on setup with Ibexa and Memcached:",
                        "# https://doc.ibexa.co/en/latest/guide/persistence_cache/#memcached",
                        "parameters:",
                        "    cache_namespace: '%env(CACHE_NAMESPACE)%'",
                        "    cache_dsn: '%env(CACHE_DSN)%'",
                        "",
                        "services:",
                        "    cache.memcached:",
                        "        public: true",
                        "        parent: cache.adapter.memcached",
                        "        tags:",
                        "            -   name: cache.pool",
                        "                clearer: cache.app_clearer",
                        "                # Example from vendor/symfony/symfony/src/Symfony/Component/Cache/Traits/MemcachedTrait.php:",
                        "                # memcached://user:pass@localhost?weight=33'",
                        "                provider: 'memcached://%cache_dsn%'",
                        "                # Cache namespace prefix overriding the one used by Symfony globally",
                        "                # This makes sure cache is reliably shared across whole cluster and all Symfony env's",
                        "                # Can be used for blue/green deployment strategies when changes affect content cache.",
                        "                # For multi db setup adapt this to be unique per pool (one pool per database)",
                        "                # If you prefer default behaviour set this to null or comment out, and consider for instance:",
                        "                # https://symfony.com/doc/current/reference/configuration/framework.html#prefix-seed",
                        "                namespace: '%cache_namespace%'",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/cache_pool/cache.redis.yaml": {
                    "contents": [
                        "# Optimized Redis cache adapter (from: https://github.com/ezsystems/symfony-tools)",
                        "#",
                        "# On platform.sh this is setup automatically in env/plaformsh.php.",
                        "# For any other kind of use it can be enabled with CACHE_POOL, detected by env/generic.php.",
                        "#",
                        "# For further reading on setup with Ibexa and Redis:",
                        "# https://doc.ibexa.co/en/latest/guide/persistence_cache/#redis",
                        "parameters:",
                        "    cache_namespace: '%env(CACHE_NAMESPACE)%'",
                        "    cache_dsn: '%env(CACHE_DSN)%'",
                        "",
                        "services:",
                        "    cache.redis:",
                        "        public: true",
                        "        class: Symfony\\Component\\Cache\\Adapter\\RedisTagAwareAdapter",
                        "        parent: cache.adapter.redis",
                        "        tags:",
                        "            -   name: cache.pool",
                        "                clearer: cache.app_clearer",
                        "                # Examples from vendor/symfony/symfony/src/Symfony/Component/Cache/Traits/RedisTrait.php:",
                        "                # redis://localhost:6379",
                        "                # redis://secret@example.com:1234/13",
                        "                # redis://secret@/var/run/redis.sock/13?persistent_id=4&class=Redis&timeout=3&retry_interval=3",
                        "                # Example using Predis: redis://%cache_dsn%?class=\\Predis\\Client",
                        "                provider: 'redis://%cache_dsn%'",
                        "                # Cache namespace prefix overriding the one used by Symfony by default",
                        "                # This makes sure cache is reliably shared across whole cluster and all Symfony env's",
                        "                # Can be used for blue/green deployment strategies when changes affect content cache.",
                        "                # For multi db setup adapt this to be unique per pool (one pool per database)",
                        "                # If you prefer default behaviour set this to null or comment out, and consider for instance:",
                        "                # https://symfony.com/doc/current/reference/configuration/framework.html#prefix-seed",
                        "                namespace: '%cache_namespace%'",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/cache_pool/cache.tagaware.filesystem.yaml": {
                    "contents": [
                        "# Optimized File cache adapter (from: https://github.com/ezsystems/symfony-tools)",
                        "#",
                        "# Loaded by default, for use on single server setups.",
                        "parameters:",
                        "    cache_namespace: '%env(CACHE_NAMESPACE)%'",
                        "",
                        "services:",
                        "    cache.tagaware.filesystem:",
                        "        public: true",
                        "        class: Symfony\\Component\\Cache\\Adapter\\FilesystemTagAwareAdapter",
                        "        parent: cache.adapter.filesystem",
                        "        tags:",
                        "            -   name: cache.pool",
                        "                clearer: cache.app_clearer",
                        "                # Cache namespace prefix overriding the one used by Symfony by default",
                        "                # This makes sure cache is reliably shared across whole cluster and all Symfony env's",
                        "                # Can be used for blue/green deployment strategies when changes affect content cache.",
                        "                # For multi db setup adapt this to be unique per pool (one pool per database)",
                        "                # If you prefer default behaviour set this to null or comment out, and consider for instance:",
                        "                # https://symfony.com/doc/current/reference/configuration/framework.html#prefix-seed",
                        "                namespace: '%cache_namespace%'",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/dfs/dfs.yaml": {
                    "contents": [
                        "parameters:",
                        "    env(DFS_DATABASE_URL): '%env(resolve:DATABASE_URL)%'",
                        "    dfs_database_url: '%env(resolve:DFS_DATABASE_URL)%'",
                        "    ibexa.io.nfs.adapter.config:",
                        "        root: '%dfs_nfs_path%'",
                        "        path: '$var_dir$/$storage_dir$/'",
                        "        writeFlags: ~",
                        "        linkHandling: ~",
                        "        permissions: [ ]",
                        "",
                        "# new doctrine connection for the dfs legacy_dfs_cluster metadata handler.",
                        "doctrine:",
                        "    dbal:",
                        "        connections:",
                        "            dfs:",
                        "                # configure these for your database server",
                        "                driver: '%dfs_database_driver%'",
                        "                charset: '%dfs_database_charset%'",
                        "                default_table_options:",
                        "                    charset: '%dfs_database_charset%'",
                        "                    collate: '%dfs_database_collation%'",
                        "                url: '%dfs_database_url%'",
                        "",
                        "# define the flysystem handler",
                        "oneup_flysystem:",
                        "    adapters:",
                        "        nfs_adapter:",
                        "            custom:",
                        "                service: ibexa.io.nfs.adapter.site_access_aware",
                        "",
                        "# define ibexa handlers",
                        "ibexa_io:",
                        "    binarydata_handlers:",
                        "        nfs:",
                        "            flysystem:",
                        "                adapter: nfs_adapter",
                        "    metadata_handlers:",
                        "        dfs:",
                        "            legacy_dfs_cluster:",
                        "                connection: doctrine.dbal.dfs_connection",
                        "",
                        "# set the application handlers",
                        "ibexa:",
                        "    system:",
                        "        default:",
                        "            io:",
                        "                metadata_handler: dfs",
                        "                binarydata_handler: nfs",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/graphql.yaml": {
                    "contents": [
                        "overblog_graphql:",
                        "    definitions:",
                        "        mappings:",
                        "            auto_discover: false",
                        "            types:",
                        "                -   type: yaml",
                        "                    dir: \"%kernel.project_dir%/config/graphql/types\"",
                        "                    suffix: ~",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa.yaml": {
                    "contents": [
                        "parameters:",
                        "    locale_fallback: en",
                        "",
                        "    # Identifier used to generate the CSRF token. Commenting this line will result in authentication",
                        "    # issues both in AdminUI and REST calls",
                        "    ibexa.rest.csrf_token_intention: authenticate",
                        "",
                        "    # You can uncomment following parameters to override the setting.",
                        "    # Their values correspond to the defaults being used.",
                        "",
                        "    # One of `legacy` (default) or `solr`",
                        "    #search_engine: '%env(SEARCH_ENGINE)%'",
                        "",
                        "    # Session save path as used by symfony session handlers (eg. used for dsn with redis)",
                        "    #ibexa.session.save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'",
                        "",
                        "    # Trusted custom header name to be mapped to X_FORWARDED_FOR",
                        "    #ibexa.trusted_header_client_ip_name: 'X-Custom-Client-Ip-Header'",
                        "    #",
                        "    ## Keep in mind you need will to configure the kernel.trusted_proxies option with",
                        "    ## an IP address of your reverse proxy server to allow use of trusted headers",
                        "    ##",
                        "    ## framework:",
                        "    ##     trusted_proxies: ['127.0.0.1']",
                        "    ##",
                        "    ## More information: https://symfony.com/doc/current/deployment/proxies.html",
                        "",
                        "    # Predefined pools are located in config/packages/cache_pool/",
                        "    # You can add your own cache pool to the folder mentioned above.",
                        "    # In order to change the default cache_pool use environmental variable export.",
                        "    # The line below must not be altered as required cache service files are resolved based on environmental config.",
                        "    #cache_pool: '%env(CACHE_POOL)%'",
                        "",
                        "    # By default cache ttl is set to 24h, when using Varnish you can set a much higher value. High values depends on",
                        "    # using IbexaHttpCacheBundle (default as of v1.12) which by design expires affected cache on changes",
                        "    #httpcache_default_ttl: '%env(HTTPCACHE_DEFAULT_TTL)%'",
                        "",
                        "    # Settings for HttpCache",
                        "    #purge_server: '%env(HTTPCACHE_PURGE_SERVER)%'",
                        "",
                        "    # Varnish invalidation/purge token (for use on platform.sh, eZ Platform Cloud and other places you can't use IP for ACL)",
                        "    #varnish_invalidate_token: '%env(resolve:default::HTTPCACHE_VARNISH_INVALIDATE_TOKEN)%'",
                        "",
                        "    # Compile time handlers",
                        "    ## These are defined at compile time, and hence can't be set at runtime using env()",
                        "    ## config/env/generic.php takes care about letting you set them by env variables",
                        "",
                        "    ## Session handler, by default set to file based (instead of ~) in order to be able to use %ezplatform.session.save_path%",
                        "    # env: SESSION_HANDLER_ID",
                        "    #ibexa.session.handler_id: session.handler.native_file",
                        "",
                        "    ## Purge type used by HttpCache system (\"local\", \"varnish\"/\"http\", and on ee also \"fastly\")",
                        "    #purge_type: '%env(HTTPCACHE_PURGE_TYPE)%'",
                        "",
                        "    env(HTTPCACHE_PURGE_TYPE): local # default value to maintain BC",
                        "",
                        "ibexa:",
                        "    # HttpCache settings, By default 'local' (Symfony HttpCache Proxy), by setting it to 'varnish' you can point it to Varnish",
                        "    http_cache:",
                        "        purge_type: '%purge_type%'",
                        "",
                        "    # Repositories configuration, setup default repository to support solr if enabled",
                        "    repositories:",
                        "        default:",
                        "            storage: ~",
                        "            search:",
                        "                engine: '%search_engine%'",
                        "                connection: default",
                        "            product_catalog:",
                        "                engine: default",
                        "",
                        "    # Siteaccess configuration, with one siteaccess per default",
                        "    siteaccess:",
                        "        list:",
                        "            - site",
                        "            - corporate",
                        "        groups:",
                        "            site_group: [site]",
                        "            corporate_group: [corporate]",
                        "        default_siteaccess: site",
                        "        match:",
                        "            URIElement: 1",
                        "            # Uncomment if you've enabled SiteFactory",
                        "            # '@Ibexa\\SiteFactory\\SiteAccessMatcher': ~",
                        "",
                        "    # System settings, read in following order: `default`, <siteaccess-group>, <siteacces>, and `global`",
                        "    # TIP: For multisite installations organize shared config into SiteAccess groups,",
                        "    #      on single-site you can place shared config under \"default\" for simplicity as shown below.",
                        "    system:",
                        "        default:",
                        "            # Cache pool service, needs to be different per repository (database) on multi repository install.",
                        "            cache_service_name: '%cache_pool%'",
                        "            # These reflect the current installers, complete installation before you change them. For changing var_dir",
                        "            # it is recommended to install clean, then change setting before you start adding binary content, otherwise you'll",
                        "            # need to manually modify your database data to reflect this to avoid exceptions.",
                        "            var_dir: var/site",
                        "            content:",
                        "                # As we by default enable IbexaHttpCacheBundle which is designed to expire all affected cache",
                        "                # on changes, and as error / redirects now have separate ttl, we easier allow ttl to be greatly increased",
                        "                default_ttl: '%httpcache_default_ttl%'",
                        "            # HttpCache purge server(s) setting, eg Varnish, for when ezpublish.http_cache.purge_type is set to 'varnish'.",
                        "            http_cache:",
                        "                purge_servers: ['%purge_server%']",
                        "                varnish_invalidate_token: '%varnish_invalidate_token%'",
                        "",
                        "            assets:",
                        "                icon_sets:",
                        "                    public_icons: /bundles/ibexaadminui/img/ibexa-icons.svg",
                        "                    streamlineicons: /bundles/ibexaicons/img/all-icons.svg",
                        "                default_icon_set: streamlineicons",
                        "",
                        "            page_layout: \"@ibexadesign/pagelayout.html.twig\"",
                        "            user_content_type_identifier: ['user']",
                        "        site:",
                        "            languages: [eng-GB]",
                        "",
                        "        corporate_group:",
                        "            languages: [eng-GB]",
                        "",
                        "    url_alias:",
                        "        slug_converter:",
                        "            transformation: 'urlalias_lowercase'",
                        "",
                        "framework:",
                        "    translator: { fallback: '%locale_fallback%' }",
                        "    validation: { enable_annotations: true }",
                        "    default_locale: '%locale_fallback%'",
                        "    esi: true",
                        "    fragments: true",
                        "    http_method_override: true",
                        "",
                        "    rate_limiter:",
                        "        corporate_account_application:",
                        "            policy: 'fixed_window'",
                        "            limit: 1",
                        "            interval: '5 minutes'",
                        "            lock_factory: 'lock.corporate_account_application.factory'",
                        "",
                        "    lock:",
                        "        default: '%env(LOCK_DSN)%'",
                        "        corporate_account_application: '%env(IBEXA_LOCK_DSN)%'",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_admin_ui.yaml": {
                    "contents": [
                        "parameters:",
                        "    # Admin siteaccess group name",
                        "    admin_group_name: admin_group",
                        "",
                        "ibexa:",
                        "    siteaccess:",
                        "        list: [admin]",
                        "        groups:",
                        "            # WARNING: Do not remove or rename this group.",
                        "            # It's used to distinguish common siteaccesses from admin ones.",
                        "            # In case of multisite with multiple admin panels, remember to add any additional admin siteaccess to this group.",
                        "            admin_group: [admin]",
                        "",
                        "    system:",
                        "        admin_group:",
                        "            # For admin this needs to contain all languages you want to translate content to on the given repository.",
                        "            languages: [eng-GB]",
                        "            content_tree_module:",
                        "                contextual_tree_root_location_ids:",
                        "                    - 2 # Home (Content structure)",
                        "                    - 5 # Users",
                        "                    - 43 # Media",
                        "                    - 48 # Setup",
                        "                    - 55 # Forms",
                        "                    - 56 # Site skeletons",
                        "                    - 60 # Components",
                        "            subtree_paths:",
                        "                content: /1/2/",
                        "                media: /1/43/",
                        "            page_builder:",
                        "                siteaccess_list: [site]",
                        "            assets:",
                        "                icon_sets:",
                        "                    streamlineicons: /bundles/ibexaicons/img/all-icons.svg",
                        "                default_icon_set: streamlineicons",
                        "            content_type:",
                        "                about:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#about'",
                        "                article:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#article'",
                        "                blog:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#blog'",
                        "                blog_post:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#blog_post'",
                        "                folder:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#folder'",
                        "                form:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#form'",
                        "                place:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#place'",
                        "                product:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#product'",
                        "                field:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#field'",
                        "                user:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#user'",
                        "                user_group:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#user_group'",
                        "                file:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#file'",
                        "                gallery:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#gallery'",
                        "                image:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#image'",
                        "                video:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#video'",
                        "                landing_page:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#landing_page'",
                        "                default-config:",
                        "                    thumbnail: '/bundles/ibexaicons/img/all-icons.svg#file'",
                        "            user_content_type_identifier: ['user']",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_assets.yaml": {
                    "contents": [
                        "webpack_encore:",
                        "    builds:",
                        "        ibexa: \"%kernel.project_dir%/public/assets/ibexa/build\"",
                        "        richtext: \"%kernel.project_dir%/public/assets/richtext/build\"",
                        "",
                        "framework:",
                        "    assets:",
                        "        packages:",
                        "            ibexa:",
                        "                json_manifest_path: '%kernel.project_dir%/public/assets/ibexa/build/manifest.json'",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_doctrine_schema.yaml": {
                    "contents": [
                        "parameters:",
                        "    database_charset: '%env(DATABASE_CHARSET)%'",
                        "    # collation currently has effect on MySQL only",
                        "    database_collation: '%env(DATABASE_COLLATION)%'",
                        "",
                        "# If you are not using MySQL, you can comment-out this section",
                        "ibexa_doctrine_schema:",
                        "    tables:",
                        "        options:",
                        "            charset: '%database_charset%'",
                        "            collate: '%database_collation%'",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_elasticsearch.yaml": {
                    "contents": [
                        "# Base configuration for Elasticsearch",
                        "parameters:",
                        "    elasticsearch_dsn: \"%env(ELASTICSEARCH_DSN)%\"",
                        "",
                        "ibexa_elasticsearch:",
                        "    connections:",
                        "        default:",
                        "            hosts:",
                        "                - \"%elasticsearch_dsn%\"",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_fastly.yaml": {
                    "contents": [
                        "parameters:",
                        "    env(FASTLY_SERVICE_ID): ~",
                        "    env(FASTLY_KEY): ~",
                        "    fastly_service_id: '%env(FASTLY_SERVICE_ID)%'",
                        "    fastly_key: '%env(FASTLY_KEY)%'",
                        "",
                        "ibexa:",
                        "    system:",
                        "        default:",
                        "            http_cache:",
                        "                # If using fastly, 'purge_server' must be set to 'https://api.fastly.com'",
                        "                fastly:",
                        "                    service_id: '%fastly_service_id%'",
                        "                    key: '%fastly_key%'",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_form_builder.yaml": {
                    "contents": [
                        "jms_translation:",
                        "    configs:",
                        "        form_builder:",
                        "            dirs:",
                        "                - '%kernel.project_dir%/vendor/ibexa/form-builder/src'",
                        "            output_dir: '%kernel.project_dir%/vendor/ibexa/form-builder/src/bundle/Resources/translations/'",
                        "            excluded_dirs: [Behat, Tests]",
                        "            output_format: \"xliff\"",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_http_cache.yaml": {
                    "contents": [
                        "## FOSHttpCache Configuration",
                        "fos_http_cache:",
                        "    cache_control:",
                        "        rules:",
                        "            # Make sure already cacheable (fresh) responses from Ibexa which are errors/redirect gets lower ttl (then default_ttl)",
                        "            -   match:",
                        "                    match_response: \"response.isFresh() && ( response.isServerError() || response.isClientError() || response.isRedirect() )\"",
                        "                headers:",
                        "                    overwrite: true",
                        "                    cache_control:",
                        "                        max_age: 5",
                        "                        s_maxage: 20",
                        "            # Example of performance tuning, force TTL on 404 pages to avoid crawlers / ... taking to much load",
                        "            # Should not be set to high, as cached 404's can cause issues for future routes, url aliases, wildcards, ..",
                        "            -   match:",
                        "                    match_response: \"!response.isFresh() && response.isNotFound()\"",
                        "                headers:",
                        "                    overwrite: true",
                        "                    cache_control:",
                        "                        public: true",
                        "                        max_age: 0",
                        "                        s_maxage: 20",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_jms_translation.yaml": {
                    "contents": [
                        "jms_translation:",
                        "    source_language: en",
                        "    locales: [en]",
                        "    dumper:",
                        "        add_references: false",
                        "        add_date: false",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_page_builder.yaml": {
                    "contents": [
                        "parameters:",
                        "    ibexa.page_builder.token_authenticator.enabled: true",
                        "",
                        "jms_translation:",
                        "    configs:",
                        "        page_builder:",
                        "            dirs:",
                        "                - '%kernel.project_dir%/vendor/ibexa/page-builder/src'",
                        "            output_dir: '%kernel.project_dir%/vendor/ibexa/page-builder/src/bundle/Resources/translations/'",
                        "            excluded_dirs: [Behat, Tests]",
                        "            output_format: \"xlf\"",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_product_catalog.yaml": {
                    "contents": [
                        "ibexa_product_catalog:",
                        "    engines:",
                        "        default:",
                        "            type: local",
                        "            options:",
                        "                root_location_remote_id: ibexa_product_catalog_root",
                        "                product_type_group_identifier: 'product'",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_site_factory.yaml": {
                    "contents": [
                        "parameters:",
                        "    # Adds a fallback DATABASE_URL if the env var is not set.",
                        "    # This allows you to run cache:warmup even if your",
                        "    # environment variables are not available yet.",
                        "    # You should not need to change this value.",
                        "    env(DATABASE_URL): ''",
                        "    env(DATABASE_DRIVER): ''",
                        "    database_driver: '%env(DATABASE_DRIVER)%'",
                        "",
                        "ibexa_site_factory:",
                        "    enabled: false",
                        "#    templates:",
                        "#        site_template:",
                        "#            siteaccess_group: site_factory_group",
                        "#            name: Example Site",
                        "#            thumbnail: /bundles/ibexasitefactory/img/template-placeholder.png",
                        "",
                        "doctrine:",
                        "    dbal:",
                        "        connections:",
                        "            # This connection is dedicated for SiteFactory to avoid known issues, should be the same as default",
                        "            site_factory:",
                        "                # configure these for your database server",
                        "                driver: '%database_driver%'",
                        "                charset: '%database_charset%'",
                        "                default_table_options:",
                        "                    charset: '%database_charset%'",
                        "                    collate: '%database_collation%'",
                        "                url: '%env(resolve:DATABASE_URL)%'",
                        "",
                        "framework:",
                        "    cache:",
                        "        pools:",
                        "            # This pool should be used only by SiteFactory bundle",
                        "            site_factory_pool:",
                        "                # You can configure it according to your needs",
                        "                adapter: cache.app",
                        "                tags: true",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_solr.yaml": {
                    "contents": [
                        "# Base configuration for Solr, for more options see: https://doc.ezplatform.com/en/latest/guide/search/#solr-bundle",
                        "# Can have several connections used by each Ibexa Repositories in ibexa.yaml",
                        "parameters:",
                        "    # Solr root endpoint, relevant if `solr` is set as search_engine",
                        "    solr_dsn: '%env(SOLR_DSN)%'",
                        "    solr_core: '%env(SOLR_CORE)%'",
                        "",
                        "ibexa_solr:",
                        "    endpoints:",
                        "        endpoint0:",
                        "            dsn: '%solr_dsn%'",
                        "            core: '%solr_core%'",
                        "    connections:",
                        "        default:",
                        "            entry_endpoints:",
                        "                - endpoint0",
                        "            mapping:",
                        "                default: endpoint0",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_taxonomy.yaml": {
                    "contents": [
                        "ibexa_taxonomy:",
                        "    taxonomies:",
                        "        tags:",
                        "            parent_location_remote_id: taxonomy_tags_folder",
                        "            content_type: tag",
                        "            field_mappings:",
                        "                identifier: identifier",
                        "                parent: parent",
                        "                name: name",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/ibexa_welcome_page.yaml": {
                    "contents": [
                        "# You can safely delete this file to disable welcome page",
                        "ibexa:",
                        "    system:",
                        "        site:",
                        "            content_view:",
                        "                full:",
                        "                    welcome_page:",
                        "                        template: \"@ibexadesign/full/welcome_page.html.twig\"",
                        "                        match:",
                        "                            Id\\Location: 2",
                        "                        params:",
                        "                            project_dir: '%kernel.project_dir%'",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/lexik_jwt_authentication.yaml": {
                    "contents": [
                        "lexik_jwt_authentication:",
                        "    secret_key: '%env(APP_SECRET)%'",
                        "    encoder:",
                        "        signature_algorithm: HS256",
                        "    # Disabled by default, because Page builder use an custom extractor",
                        "    token_extractors:",
                        "        authorization_header:",
                        "            enabled: false",
                        "        cookie:",
                        "            enabled: false",
                        "        query_parameter:",
                        "            enabled: false",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/security.yaml": {
                    "contents": [
                        "#security:",
                        "#    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers",
                        "#    providers:",
                        "#        in_memory: { memory: ~ }",
                        "#    firewalls:",
                        "#        dev:",
                        "#            pattern: ^/(_(profiler|wdt)|css|images|js)/",
                        "#            security: false",
                        "#        main:",
                        "#            anonymous: true",
                        "#",
                        "#            # activate different ways to authenticate",
                        "#",
                        "#            # http_basic: true",
                        "#            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate",
                        "#",
                        "#            # form_login: true",
                        "#            # https://symfony.com/doc/current/security/form_login_setup.html",
                        "#",
                        "#    # Easy way to control access for large sections of your site",
                        "#    # Note: Only the *first* access control that matches will be used",
                        "#    access_control:",
                        "#        # - { path: ^/admin, roles: ROLE_ADMIN }",
                        "#        # - { path: ^/profile, roles: ROLE_USER }",
                        "#",
                        "",
                        "# To get started with security, check out the documentation:",
                        "# https://symfony.com/doc/current/security.html",
                        "security:",
                        "    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded",
                        "    providers:",
                        "        ibexa:",
                        "            id: ibexa.security.user_provider",
                        "    #!        in_memory:",
                        "    #!            memory: ~",
                        "",
                        "    firewalls:",
                        "        # disables authentication for assets and the profiler, adapt it according to your needs",
                        "        dev:",
                        "            pattern: ^/(_(profiler|wdt)|css|images|js)/",
                        "            security: false",
                        "",
                        "        ibexa_forgot_password:",
                        "            pattern: /user/(forgot-password|reset-password)",
                        "            security: false",
                        "",
                        "        ibexa_register_from_invitation:",
                        "            pattern: /user/from-invite/register|/from-invite/register",
                        "            security: false",
                        "",
                        "        ibexa_corporate_dev:",
                        "            pattern: ^/corporate/(css|images|js)/",
                        "            security: false",
                        "",
                        "        ibexa_corporate_customer_portal_register:",
                        "            pattern: ^/corporate/customer-portal/register",
                        "            security: false",
                        "",
                        "        ibexa_corporate_fieldtype_address:",
                        "            pattern: ^/corporate/address/form/",
                        "            security: false",
                        "",
                        "        # Uncomment `ibexa_cdp` rule if you are using Ibexa CDP connector",
                        "        #ibexa_cdp:",
                        "        #    pattern: /cdp/webhook",
                        "        #    guard:",
                        "        #        authenticator: 'Ibexa\\Cdp\\Security\\CdpRequestAuthenticator'",
                        "        #    stateless: true",
                        "",
                        "        # Uncomment the rules below to enable JSON Web Token (JWT) authentication for REST and/or GraphQL",
                        "        #ibexa_jwt_rest:",
                        "        #    request_matcher: Ibexa\\Contracts\\Rest\\Security\\AuthorizationHeaderRESTRequestMatcher",
                        "        #    user_checker: Ibexa\\Core\\MVC\\Symfony\\Security\\UserChecker",
                        "        #    anonymous: ~",
                        "        #    guard:",
                        "        #        authenticators:",
                        "        #            - lexik_jwt_authentication.jwt_token_authenticator",
                        "        #        entry_point: lexik_jwt_authentication.jwt_token_authenticator",
                        "        #    stateless: true",
                        "",
                        "        #ibexa_jwt_graphql:",
                        "        #    request_matcher: Ibexa\\GraphQL\\Security\\NonAdminGraphQLRequestMatcher",
                        "        #    user_checker: Ibexa\\Core\\MVC\\Symfony\\Security\\UserChecker",
                        "        #    anonymous: ~",
                        "        #    guard:",
                        "        #        authenticators:",
                        "        #            - lexik_jwt_authentication.jwt_token_authenticator",
                        "        #        entry_point: lexik_jwt_authentication.jwt_token_authenticator",
                        "        #    stateless: true",
                        "",
                        "        # Uncomment ibexa_oauth2_connect, ibexa_oauth2_front rules and comment ibexa_front firewall",
                        "        # to enable OAuth2 authentication",
                        "",
                        "        #ibexa_oauth2_connect:",
                        "        #    pattern: /oauth2/connect/*",
                        "        #    security: false",
                        "",
                        "        #ibexa_oauth2_front:",
                        "        #    pattern: ^/",
                        "        #    user_checker: Ibexa\\Core\\MVC\\Symfony\\Security\\UserChecker",
                        "        #    anonymous: ~",
                        "        #    ibexa_rest_session: ~",
                        "        #    guard:",
                        "        #        authenticators:",
                        "        #            - Ibexa\\Bundle\\OAuth2Client\\Security\\Authenticator\\OAuth2Authenticator",
                        "        #            - Ibexa\\PageBuilder\\Security\\EditorialMode\\TokenAuthenticator",
                        "        #        entry_point: Ibexa\\Bundle\\OAuth2Client\\Security\\Authenticator\\OAuth2Authenticator",
                        "        #    form_login:",
                        "        #        require_previous_session: false",
                        "        #        csrf_token_generator: security.csrf.token_manager",
                        "        #    logout: ~",
                        "",
                        "        ibexa_front:",
                        "            pattern: ^/",
                        "            user_checker: Ibexa\\Core\\MVC\\Symfony\\Security\\UserChecker",
                        "            anonymous: ~",
                        "            ibexa_rest_session: ~",
                        "            form_login:",
                        "                require_previous_session: false",
                        "                csrf_token_generator: security.csrf.token_manager",
                        "            guard:",
                        "                authenticator: 'Ibexa\\PageBuilder\\Security\\EditorialMode\\TokenAuthenticator'",
                        "            logout: ~",
                        "",
                        "        main:",
                        "            anonymous: ~",
                        "            # activate different ways to authenticate",
                        "",
                        "            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate",
                        "            #http_basic: ~",
                        "",
                        "            # https://symfony.com/doc/current/security/form_login_setup.html",
                        "            #form_login: ~",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/graphql.yaml": {
                    "contents": [
                        "overblog_graphql_endpoint:",
                        "    path: /graphql",
                        "    defaults:",
                        "        _controller: Overblog\\GraphQLBundle\\Controller\\GraphController::endpointAction",
                        "        _format: \"json\"",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa.yaml": {
                    "contents": [
                        "login:",
                        "    path: /login",
                        "    defaults: { _controller: Ibexa\\Core\\MVC\\Symfony\\Controller\\SecurityController::loginAction }",
                        "",
                        "login_check:",
                        "    path: /login_check",
                        "",
                        "logout:",
                        "    path: /logout",
                        "",
                        "ibexa.core:",
                        "    resource: '@IbexaCoreBundle/Resources/config/routing/internal.yml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_admin_ui.yaml": {
                    "contents": [
                        "ibexa.admin_ui:",
                        "    resource: '@IbexaAdminUiBundle/Resources/config/routing.yaml'",
                        "    defaults:",
                        "        siteaccess_group_whitelist: '%admin_group_name%'",
                        "",
                        "ibexa.admin_ui.rest:",
                        "    resource: '@IbexaAdminUiBundle/Resources/config/routing_rest.yaml'",
                        "    prefix: '%ibexa.rest.path_prefix%'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_calendar.yaml": {
                    "contents": [
                        "ibexa.calendar:",
                        "    resource: '@IbexaCalendarBundle/Resources/config/routing.yaml'",
                        "    defaults:",
                        "        siteaccess_group_whitelist: '%admin_group_name%'",
                        "",
                        "ibexa.calendar.rest:",
                        "    resource: '@IbexaCalendarBundle/Resources/config/routing_rest.yaml'",
                        "    prefix: '%ibexa.rest.path_prefix%'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_connector_dam.yaml": {
                    "contents": [
                        "ibexa.connector_dam:",
                        "    resource: '@IbexaConnectorDamBundle/Resources/config/routing.yaml'",
                        "",
                        "ibexa.connector_dam.rest:",
                        "    resource: '@IbexaConnectorDamBundle/Resources/config/routing_rest.yaml'",
                        "    prefix: '%ibexa.rest.path_prefix%'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_content_forms.yaml": {
                    "contents": [
                        "ibexa.content_forms:",
                        "    resource: '@IbexaContentFormsBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_corporate_account.yaml": {
                    "contents": [
                        "ibexa.corporate_account:",
                        "    resource: '@IbexaCorporateAccountBundle/Resources/config/routing_admin_ui.yaml'",
                        "",
                        "ibexa.corporate_account.customer_portal:",
                        "    resource: '@IbexaCorporateAccountBundle/Resources/config/routing_customer_portal.yaml'",
                        "    defaults:",
                        "        siteaccess_group_whitelist: 'corporate_group'",
                        "",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_fieldtype_address.yaml": {
                    "contents": [
                        "ibexa.field_type_address:",
                        "    resource: '@IbexaFieldTypeAddressBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_fieldtype_page.yaml": {
                    "contents": [
                        "ibexa.field_type_page:",
                        "    resource: '@IbexaFieldTypePageBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_fieldtype_query.yaml": {
                    "contents": [
                        "ibexa.field_type_query:",
                        "    resource: '@IbexaFieldTypeQueryBundle/Resources/config/routing/rest.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_form_builder.yaml": {
                    "contents": [
                        "ibexa.form_builder:",
                        "    resource: '@IbexaFormBuilderBundle/Resources/config/routing.yaml'",
                        "    defaults:",
                        "        siteaccess_group_whitelist: '%admin_group_name%'",
                        "",
                        "ibexa.form_builder.captcha:",
                        "    resource: '@IbexaFormBuilderBundle/Resources/config/captcha_routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_http_cache.yaml": {
                    "contents": [
                        "ibexa.http_cache:",
                        "    resource: '@IbexaHttpCacheBundle/Resources/config/routing.yml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_image_editor.yaml": {
                    "contents": [
                        "ibexa.image_editor:",
                        "    resource: '@IbexaImageEditorBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_oauth2_client.yaml": {
                    "contents": [
                        "ibexa.oauth2_client:",
                        "  resource: '@IbexaOAuth2ClientBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_page_builder.yaml": {
                    "contents": [
                        "ibexa.page_builder:",
                        "    resource: '@IbexaPageBuilderBundle/Resources/config/routing.yaml'",
                        "    defaults:",
                        "        siteaccess_group_whitelist: '%admin_group_name%'",
                        "",
                        "ibexa.page_builder_preview:",
                        "    resource: '@IbexaPageBuilderBundle/Resources/config/routing_preview.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_personalization.yaml": {
                    "contents": [
                        "ibexa.personalization:",
                        "    resource: '@IbexaPersonalizationBundle/Resources/config/routing.yaml'",
                        "    defaults:",
                        "        siteaccess_group_whitelist: '%admin_group_name%'",
                        "",
                        "ibexa.personalization.rest:",
                        "    resource: \"@IbexaPersonalizationBundle/Resources/config/routing_rest.yaml\"",
                        "    prefix:   '%ibexa.rest.path_prefix%'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_product_catalog.yaml": {
                    "contents": [
                        "ibexa.product_catalog:",
                        "    resource: '@IbexaProductCatalogBundle/Resources/config/routing.yaml'",
                        "",
                        "ibexa.product_catalog.admin:",
                        "    resource: '@IbexaProductCatalogBundle/Resources/config/routing_admin.yaml'",
                        "    defaults:",
                        "        siteaccess_group_whitelist: '%admin_group_name%'",
                        "",
                        "ibexa.product_catalog.rest:",
                        "    resource: '@IbexaProductCatalogBundle/Resources/config/routing_rest.yaml'",
                        "    prefix: '%ibexa.rest.path_prefix%'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_rest.yaml": {
                    "contents": [
                        "ibexa.rest:",
                        "    resource: '@IbexaRestBundle/Resources/config/routing.yml'",
                        "    prefix: '%ibexa.rest.path_prefix%'",
                        "",
                        "ibexa.rest.options:",
                        "    resource: '@IbexaRestBundle/Resources/config/routing.yml'",
                        "    prefix: '%ibexa.rest.path_prefix%'",
                        "    type: rest_options",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_scheduler.yaml": {
                    "contents": [
                        "ibexa.scheduler:",
                        "    resource: '@IbexaSchedulerBundle/Resources/config/routing.yaml'",
                        "",
                        "ibexa.scheduler.rest:",
                        "    resource: '@IbexaSchedulerBundle/Resources/config/routing_rest.yaml'",
                        "    prefix: '%ibexa.scheduler.rest.prefix%'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_search.yaml": {
                    "contents": [
                        "ibexa.search:",
                        "    resource: '@IbexaSearchBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_segmentation.yaml": {
                    "contents": [
                        "ibexa.segmentation:",
                        "    resource: '@IbexaSegmentationBundle/Resources/config/routing.yaml'",
                        "",
                        "ibexa.segmentation.rest:",
                        "    resource: '@IbexaSegmentationBundle/Resources/config/routing_rest.yaml'",
                        "    prefix: '%ibexa.rest.path_prefix%'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_site_factory.yaml": {
                    "contents": [
                        "ibexa.site_factory:",
                        "    resource: '@IbexaSiteFactoryBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_system_info.yaml": {
                    "contents": [
                        "ibexa.system_info:",
                        "  resource: '@IbexaSystemInfoBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_taxonomy.yaml": {
                    "contents": [
                        "ibexa.taxonomy:",
                        "    resource: '@IbexaTaxonomyBundle/Resources/config/routing.yaml'",
                        "",
                        "ibexa.taxonomy.rest:",
                        "    resource: '@IbexaTaxonomyBundle/Resources/config/routing_rest.yaml'",
                        "    prefix: '%ibexa.rest.path_prefix%'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_user.yaml": {
                    "contents": [
                        "ibexa.user:",
                        "    resource: '@IbexaUserBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_version_comparison.yaml": {
                    "contents": [
                        "ibexa.version_comparison:",
                        "    resource: '@IbexaVersionComparisonBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/ibexa_workflow.yaml": {
                    "contents": [
                        "ibexa.workflow:",
                        "    resource: '@IbexaWorkflowBundle/Resources/config/routing.yaml'",
                        ""
                    ],
                    "executable": false
                },
                "encore/ibexa.webpack.config.js": {
                    "contents": [
                        "const bundles = require('./var/encore/ibexa.config.js');",
                        "const ibexaConfigManager = require('./ibexa.webpack.config.manager.js');",
                        "const configManagers = require('./var/encore/ibexa.config.manager.js');",
                        "const configSetups = require('./var/encore/ibexa.config.setup.js');",
                        "const path = require('path');",
                        "",
                        "module.exports = (Encore) => {",
                        "    Encore.setOutputPath('public/assets/ibexa/build')",
                        "        .setPublicPath('/assets/ibexa/build')",
                        "        .addExternals({",
                        "            react: 'React',",
                        "            'react-dom': 'ReactDOM',",
                        "            moment: 'moment',",
                        "            'popper.js': 'Popper',",
                        "            alloyeditor: 'AlloyEditor',",
                        "            'prop-types': 'PropTypes',",
                        "        })",
                        "        .enableSassLoader()",
                        "        .enableReactPreset()",
                        "        .enableSingleRuntimeChunk();",
                        "",
                        "    configSetups.forEach((configSetupPath) => {",
                        "        const setupConfig = require(configSetupPath);",
                        "",
                        "        setupConfig(Encore);",
                        "    });",
                        "",
                        "    bundles.forEach((configPath) => {",
                        "        const addEntries = require(configPath);",
                        "",
                        "        addEntries(Encore);",
                        "    });",
                        "",
                        "    const ibexaConfig = Encore.getWebpackConfig();",
                        "",
                        "    ibexaConfig.name = 'ibexa';",
                        "",
                        "    ibexaConfig.module.rules[4].oneOf[1].use[1].options.url = false;",
                        "    ibexaConfig.module.rules[1].oneOf[1].use[1].options.url = false;",
                        "",
                        "    configManagers.forEach((configManagerPath) => {",
                        "        const configManager = require(configManagerPath);",
                        "",
                        "        configManager(ibexaConfig, ibexaConfigManager);",
                        "    });",
                        "",
                        "    Encore.reset();",
                        "",
                        "    return ibexaConfig;",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "encore/ibexa.webpack.config.manager.js": {
                    "contents": [
                        "const fs = require('fs');",
                        "/*",
                        "    We changed all entry names to ibexa-, but for BC change we left possibility to still use ezplatform-",
                        "    Note that using ezplatform- is deprecate and will be removed in version 5.0",
                        "*/",
                        "const ibexifyEntryName = (entryName) => {",
                        "    let ibexaEntryName = entryName;",
                        "",
                        "    if (entryName.indexOf('ezplatform-') === 0) {",
                        "        console.warn('\\x1b[43m%s\\x1b[0m', 'Using ezplatform- is deprecated and will be removed in 5.0');",
                        "",
                        "        ibexaEntryName = entryName.replace('ezplatform-', 'ibexa-');",
                        "    } else if (entryName.indexOf('ezcommerce-') === 0) {",
                        "        console.warn('\\x1b[43m%s\\x1b[0m', 'Using ezcommerce- is deprecated and will be removed in 5.0');",
                        "",
                        "        ibexaEntryName = entryName.replace('ezcommerce-', 'ibexa-commerce-');",
                        "    }",
                        "",
                        "    return ibexaEntryName;",
                        "}",
                        "const findItems = (ibexaConfig, entryName) => {",
                        "    const items = ibexaConfig.entry[entryName];",
                        "",
                        "    if (!items) {",
                        "        throw new Error(`Couldn't find entry with name: \"${entryName}\". Please check if there is a typo in the name.`);",
                        "    }",
                        "",
                        "    return items;",
                        "};",
                        "const replace = ({ ibexaConfig, eZConfig, entryName, itemToReplace, newItem }) => {",
                        "    const config = ibexaConfig ? ibexaConfig : eZConfig;",
                        "    const ibexaEntryName = ibexifyEntryName(entryName);",
                        "    const items = findItems(config, ibexaEntryName);",
                        "    const indexToReplace = items.indexOf(fs.realpathSync(itemToReplace));",
                        "",
                        "    if (indexToReplace < 0) {",
                        "        throw new Error(`Couldn't find item \"${itemToReplace}\" in entry \"${ibexaEntryName}\". Please check if there is a typo in the name.`);",
                        "    }",
                        "",
                        "    items[indexToReplace] = newItem;",
                        "};",
                        "const remove = ({ ibexaConfig, eZConfig, entryName, itemsToRemove }) => {",
                        "    const config = ibexaConfig ? ibexaConfig : eZConfig;",
                        "    const ibexaEntryName = ibexifyEntryName(entryName);",
                        "    const items = findItems(config, ibexaEntryName);",
                        "    const realPathItemsToRemove = itemsToRemove.map((item) => fs.realpathSync(item));",
                        "",
                        "    config.entry[ibexaEntryName] = items.filter((item) => !realPathItemsToRemove.includes(item));",
                        "};",
                        "const add = ({ ibexaConfig, eZConfig, entryName, newItems }) => {",
                        "    const config = ibexaConfig ? ibexaConfig : eZConfig;",
                        "",
                        "    const ibexaEntryName = ibexifyEntryName(entryName);",
                        "    const items = findItems(config, ibexaEntryName);",
                        "",
                        "    config.entry[ibexaEntryName] = [...items, ...newItems];",
                        "};",
                        "",
                        "module.exports = {",
                        "    replace,",
                        "    remove,",
                        "    add",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "encore/ibexa.webpack.custom.configs.js": {
                    "contents": [
                        "const customConfigs = require('./var/encore/ibexa.webpack.custom.config.js');",
                        "",
                        "module.exports = customConfigs.reduce((configs, customConfigPath) => {",
                        "    let customConfig = require(customConfigPath);",
                        "",
                        "    if (!Array.isArray(customConfig)) {",
                        "        customConfig = [customConfig];",
                        "    }",
                        "",
                        "    return [ ...configs, ...customConfig ];",
                        "}, []);",
                        ""
                    ],
                    "executable": false
                },
                "encore/package.json": {
                    "contents": [
                        "{",
                        "  \"devDependencies\": {",
                        "    \"@hotwired/stimulus\": \"^3.0.0\",",
                        "    \"@symfony/stimulus-bridge\": \"^3.0.0\",",
                        "    \"@symfony/webpack-encore\": \"^1.7.0\",",
                        "    \"@babel/preset-react\": \"^7.0.0\",",
                        "    \"core-js\": \"^3.0.0\",",
                        "    \"regenerator-runtime\": \"^0.13.2\",",
                        "    \"webpack-notifier\": \"^1.6.0\",",
                        "    \"react-collapsible\": \"^2.5.0\",",
                        "    \"sass\": \"^1.49.7\",",
                        "    \"sass-loader\": \"^12.5.0\",",
                        "    \"@babel/runtime\": \"^7.13.10\",",
                        "    \"postcss-loader\": \"^4.3.0\",",
                        "    \"raw-loader\": \"^4.0.1\",",
                        "    \"style-loader\": \"^2.0.0\",",
                        "    \"file-loader\": \"^6.0.0\",",
                        "    \"@ckeditor/ckeditor5-alignment\": \"^35.3.2\",",
                        "    \"@ckeditor/ckeditor5-build-inline\": \"^35.3.2\",",
                        "    \"@ckeditor/ckeditor5-dev-utils\": \"^31.0.0\",",
                        "    \"@ckeditor/ckeditor5-widget\": \"^35.3.2\",",
                        "    \"@ckeditor/ckeditor5-theme-lark\": \"^35.3.2\",",
                        "    \"@ckeditor/ckeditor5-code-block\": \"^35.3.2\"",
                        "  },",
                        "  \"license\": \"UNLICENSED\",",
                        "  \"private\": true,",
                        "  \"scripts\": {",
                        "    \"dev-server\": \"encore dev-server\",",
                        "    \"dev\": \"encore dev\",",
                        "    \"watch\": \"encore dev --watch\",",
                        "    \"build\": \"encore production --progress\"",
                        "  }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "encore/webpack.config.js": {
                    "contents": [
                        "const Encore = require('@symfony/webpack-encore');",
                        "const path = require('path');",
                        "const getIbexaConfig = require('./ibexa.webpack.config.js');",
                        "const ibexaConfig = getIbexaConfig(Encore);",
                        "const customConfigs = require('./ibexa.webpack.custom.configs.js');",
                        "",
                        "Encore.reset();",
                        "Encore",
                        "    .setOutputPath('public/build/')",
                        "    .setPublicPath('/build')",
                        "    .enableStimulusBridge('./assets/controllers.json')",
                        "    .enableSassLoader()",
                        "    .enableReactPreset()",
                        "    .enableSingleRuntimeChunk()",
                        "    .copyFiles({",
                        "        from: './assets/images',",
                        "        to: 'images/[path][name].[ext]',",
                        "        pattern: /\\.(png|svg)$/",
                        "    })",
                        "    .configureBabel((config) => {",
                        "        config.plugins.push('@babel/plugin-proposal-class-properties');",
                        "    })",
                        "",
                        "    // enables @babel/preset-env polyfills",
                        "    .configureBabelPresetEnv((config) => {",
                        "        config.useBuiltIns = 'usage';",
                        "        config.corejs = 3;",
                        "    })",
                        ";",
                        "",
                        "// Welcome page stylesheets",
                        "Encore.addEntry('welcome_page', [",
                        "    path.resolve(__dirname, './assets/scss/welcome-page.scss'),",
                        "]);",
                        "",
                        "Encore.addEntry('app', './assets/app.js');",
                        "",
                        "const projectConfig = Encore.getWebpackConfig();",
                        "",
                        "projectConfig.name = 'app';",
                        "",
                        "module.exports = [ ibexaConfig, ...customConfigs, projectConfig ];",
                        "",
                        "// uncomment this line if you've commented-out the above lines",
                        "// module.exports = [ eZConfig, ibexaConfig, ...customConfigs ];",
                        ""
                    ],
                    "executable": false
                },
                "templates/themes/standard/full/welcome_page.html.twig": {
                    "contents": [
                        "{% extends '@ibexadesign/pagelayout.html.twig' %}",
                        "",
                        "{% trans_default_domain 'ibexa_welcome_page' %}",
                        "",
                        "{% block stylesheets %}",
                        "    <link href=\"https://fonts.googleapis.com/css?family=Work+Sans:400,700\" rel=\"stylesheet\">",
                        "    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans:wght@400;700&display=swap\" rel=\"stylesheet\">",
                        "    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">",
                        "",
                        "    {{ encore_entry_link_tags('welcome_page') }}",
                        "{% endblock %}",
                        "",
                        "{% block content %}",
                        "    <header>",
                        "        <div class=\"container-fluid container--wide\">",
                        "            <div class=\"row\">",
                        "                <div class=\"col-12\">",
                        "                    <div class=\"py-4\">",
                        "                        <img src=\"{{ asset('bundles/ibexaadminui/img/ibexa-logo.svg') }}\" alt=\"Ibexa\" class=\"logo\">",
                        "                    </div>",
                        "                </div>",
                        "            </div>",
                        "        </div>",
                        "        <div class=\"container-fluid header__container\">",
                        "            <div class=\"container h-100 text-center text-white d-flex flex-column align-items-center justify-content-center\">",
                        "                <h1>",
                        "                    {{ 'ibexa_platform_welcome_page.welcome_to'|trans|desc('Welcome to') }}<br>",
                        "                    {{ ibexa_render_field(content, 'name') }}",
                        "                    {{ constant('Ibexa\\\\Contracts\\\\Core\\\\Ibexa::VERSION') }}",
                        "                </h1>",
                        "                <div class=\"pt-5\">",
                        "                    <strong>{{ ibexa_render_field(content, 'description') }}</strong>",
                        "                    <p class=\"mb-0\">{{ 'ibexa_platform_welcome_page.navigate_to'|trans({'%target%': project_dir})|desc('Navigate to:\u00a0%target%') }}</p>",
                        "",
                        "                    {% set admin_url = url('ibexa.dashboard', { 'siteaccess': 'admin' }) %}",
                        "                    <p class=\"mb-0\">",
                        "                        {{ 'ibexa_platform_welcome_page.create_new_content_at'|trans({'%target%': '<a href=\"' ~ admin_url ~ '\" class=\"text-white\"><u>' ~ admin_url ~ '</u></a>' })",
                        "                        |desc('Create new content at %target%')|raw }}",
                        "                    </p>",
                        "                </div>",
                        "            </div>",
                        "        </div>",
                        "    </header>",
                        "    <div class=\"page pb-4\">",
                        "        <div class=\"container-fluid background-grey pb-3\">",
                        "            <div class=\"row py-3\">",
                        "                <div class=\"col-12 py-3\">",
                        "                    <div class=\"container text-center description\">",
                        "                        {{ ibexa_render_field(content, 'page') }}",
                        "                    </div>",
                        "                </div>",
                        "            </div>",
                        "        </div>",
                        "        <div class=\"container-fluid container--wide mt-5 references px-5\">",
                        "            <div class=\"row\">",
                        "                <div class=\"col-lg-4 col-md-6 col-sm-12\">",
                        "                    <div class=\"d-flex flex-row justify-content-center\">",
                        "                        <div class=\"mr-3\">",
                        "                            <img src=\"{{ asset('build/images/file-text-info-icon.svg') }}\" alt=\"File text info icon\">",
                        "                        </div>",
                        "                        <div>",
                        "                            <h2 class=\"mb-3\">{{ 'ibexa_platform_welcome_page.documentation'|trans|desc('Documentation') }}</h2>",
                        "                            <ul class=\"list-unstyled references-list\">",
                        "                                <li class=\"references-list-item\">",
                        "                                    <a href=\"https://ibexa.co/documentation-center\" class=\"references-list-item__link\" target=\"_blank\">",
                        "                                        {{ 'ibexa_platform_welcome_page.documentation_center'|trans|desc('Documentation center') }}",
                        "                                    </a>",
                        "                                </li>",
                        "                                <li class=\"references-list-item\">",
                        "                                    <a href=\"https://doc.ibexa.co/projects/userguide\" class=\"references-list-item__link\" target=\"_blank\">",
                        "                                        {{ 'ibexa_platform_welcome_page.user_documentation'|trans|desc('User documentation') }}",
                        "                                    </a>",
                        "                                </li>",
                        "                                <li class=\"references-list-item\">",
                        "                                    <a href=\"https://doc.ibexa.co\" class=\"references-list-item__link\" target=\"_blank\">",
                        "                                        {{ 'ibexa_platform_welcome_page.developer_documentation'|trans|desc('Developer documentation') }}",
                        "                                    </a>",
                        "                                </li>",
                        "                            </ul>",
                        "                        </div>",
                        "                    </div>",
                        "                </div>",
                        "                <div class=\"col-lg-4 col-md-6 mt-5 mt-md-0\">",
                        "                    <div class=\"d-flex flex-row justify-content-center\">",
                        "                        <div class=\"mr-3\">",
                        "                            <img src=\"{{ asset('build/images/folder-icon.svg') }}\" alt=\"Folder icon\">",
                        "                        </div>",
                        "                        <div>",
                        "                            <h2 class=\"mb-3\">{{ 'ibexa_platform_welcome_page.tutorials_and_resources'|trans|desc('Tutorials and resources') }}</h2>",
                        "                            <ul class=\"list-unstyled references-list\">",
                        "                                <li class=\"references-list-item\">",
                        "                                    <a href=\"https://doc.ibexa.co/en/latest/getting_started/first_steps\" class=\"references-list-item__link\" target=\"_blank\">",
                        "                                        {{ 'ibexa_platform_welcome_page.getting_started'|trans|desc('Getting started') }}",
                        "                                    </a>",
                        "                                </li>",
                        "                                <li class=\"references-list-item\">",
                        "                                    <a href=\"https://doc.ibexa.co/en/latest/tutorials/platform_beginner/building_a_bicycle_route_tracker_in_ez_platform\" class=\"references-list-item__link\" target=\"_blank\">",
                        "                                        {{ 'ibexa_platform_welcome_page.tutorials'|trans|desc('Tutorials') }}",
                        "                                    </a>",
                        "                                </li>",
                        "                                <li class=\"references-list-item\">",
                        "                                    <a href=\"http://doc.ibexa.co/rest-api-reference\" class=\"references-list-item__link\" target=\"_blank\">",
                        "                                        {{ 'ibexa_platform_welcome_page.rest_api_reference'|trans|desc('REST API reference') }}",
                        "                                    </a>",
                        "                                </li>",
                        "                                <li class=\"references-list-item\">",
                        "                                    <a href=\"https://doc.ibexa.co/en/latest/api/public_php_api\" class=\"references-list-item__link\" target=\"_blank\">",
                        "                                        {{ 'ibexa_platform_welcome_page.public_php_api'|trans|desc('Public PHP API') }}",
                        "                                    </a>",
                        "                                </li>",
                        "                                <li>",
                        "                                    <a href=\"https://doc.ibexa.co/en/latest/api/graphql\" class=\"references-list-item__link\" target=\"_blank\">GraphQL</a>",
                        "                                </li>",
                        "                            </ul>",
                        "                        </div>",
                        "                    </div>",
                        "                </div>",
                        "                <div class=\"col-lg-4 col-md-6 mt-lg-0 mt-5\">",
                        "                    <div class=\"d-flex flex-row justify-content-center mr-auto\">",
                        "                        <div class=\"mr-3\">",
                        "                            <img src=\"{{ asset('build/images/conversation-chat-icon.svg') }}\" alt=\"Conversation chat icon\">",
                        "                        </div>",
                        "                        <div>",
                        "                            <h2 class=\"mb-3\">{{ 'ibexa_platform_welcome_page.forums_and_community'|trans|desc('Forums and community') }}</h2>",
                        "                            <ul class=\"list-unstyled references-list\">",
                        "                                <li class=\"references-list-item\">",
                        "                                    <a href=\"https://discuss.ibexa.co\" class=\"references-list-item__link\" target=\"_blank\">",
                        "                                        {{ 'ibexa_platform_welcome_page.discussion_forum'|trans|desc('Discussion forum') }}",
                        "                                    </a>",
                        "                                </li>",
                        "                                <li class=\"references-list-item\">",
                        "                                    <a href=\"https://ez-community-on-slack.herokuapp.com/\" class=\"references-list-item__link\" target=\"_blank\">",
                        "                                        {{ 'ibexa_platform_welcome_page.community_slack_channel'|trans|desc('Community Slack channel') }}",
                        "                                    </a>",
                        "                                </li>",
                        "                                <li class=\"references-list-item\">",
                        "                                    <a href=\"https://ibexa.co/blog\" class=\"references-list-item__link\" target=\"_blank\">",
                        "                                        {{ 'ibexa_platform_welcome_page.ibexa_blog'|trans|desc('Ibexa blog') }}",
                        "                                    </a>",
                        "                                </li>",
                        "                            </ul>",
                        "                        </div>",
                        "                    </div>",
                        "                </div>",
                        "            </div>",
                        "        </div>",
                        "    </div>",
                        "    <footer class=\"footer pb-3\">",
                        "        <div class=\"container-fluid container--wide\">",
                        "        <span class=\"copyright\">",
                        "        {{ 'ibexa_platform_welcome_page.copyright'|trans({",
                        "            '%ibexa_link_open%': '<a href=\"http://ibexa.co\" target=\"_blank\">',",
                        "            '%ibexa_link_close%': '</a>',",
                        "            '%current_year%': \"now\"|date(\"Y\")",
                        "        }) |desc('Ibexa Digital Experience Platform \u00a9 %current_year% %ibexa_link_open%Ibexa%ibexa_link_close% and others')|raw }}",
                        "        </span>",
                        "        </div>",
                        "    </footer>",
                        "{% endblock %}",
                        ""
                    ],
                    "executable": false
                },
                "templates/themes/standard/pagelayout.html.twig": {
                    "contents": [
                        "<!doctype html>",
                        "<html lang=\"{{ app.request.locale|replace({'_': '-'}) }}\">",
                        "<head>",
                        "    <link rel=\"icon\" type=\"image/x-icon\" href=\"{{ asset('bundles/ibexaadminui/img/favicon.ico') }}\" />",
                        "    <meta charset=\"utf-8\">",
                        "    {% if content is defined and title is not defined %}",
                        "        {% set title = ibexa_content_name( content ) %}",
                        "    {% endif %}",
                        "    <title>{{ title|default( 'Home' ) }}</title>",
                        "",
                        "    {% block stylesheets %}{% endblock %}",
                        "",
                        "    {% block ibexa_seo_block %}",
                        "        {%- if content is defined -%}",
                        "            {{- ibexa_seo(content) -}}",
                        "        {%- endif -%}",
                        "    {% endblock %}",
                        "",
                        "    <meta name=\"generator\" content=\"Ibexa DXP\"/>",
                        "</head>",
                        "<body>",
                        "{% block content %}{% endblock %}",
                        "{% block javascripts %}{% endblock %}",
                        "</body>",
                        "</html>",
                        ""
                    ],
                    "executable": false
                },
                "translations/ibexa_welcome_page.en.xlf": {
                    "contents": [
                        "<?xml version=\"1.0\" encoding=\"utf-8\"?>",
                        "<xliff xmlns=\"urn:oasis:names:tc:xliff:document:1.2\" xmlns:jms=\"urn:jms:translation\" version=\"1.2\">",
                        "    <file source-language=\"en\" target-language=\"en\" datatype=\"plaintext\" original=\"not.available\">",
                        "        <header>",
                        "            <tool tool-id=\"JMSTranslationBundle\" tool-name=\"JMSTranslationBundle\" tool-version=\"1.1.0-DEV\"/>",
                        "            <note>The source node in most cases contains the sample message as written by the developer. If it looks like a dot-delimitted string such as \"form.label.firstname\", then the developer has not provided a default message.</note>",
                        "        </header>",
                        "        <body>",
                        "            <trans-unit id=\"2987fc15ff9917b965034c1f6113259e3670b0cb\" resname=\"ibexa_platform_welcome_page.community_slack_channel\">",
                        "                <source>Community Slack channel</source>",
                        "                <target state=\"new\">Community Slack channel</target>",
                        "                <note>key: ibexa_platform_welcome_page.community_slack_channel</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"4c881f4c860503bedbef66f45a3500ac13c22621\" resname=\"ibexa_platform_welcome_page.copyright\">",
                        "                <source>Ibexa Digital Experience Platform \u00a9 %current_year% %ibexa_link_open%Ibexa%ibexa_link_close% and others</source>",
                        "                <target state=\"new\">Ibexa Digital Experience Platform \u00a9 %current_year% %ibexa_link_open%Ibexa%ibexa_link_close% and others</target>",
                        "                <note>key: ibexa_platform_welcome_page.copyright</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"38fed69c2be5e97705fcf090148d490768d8c81d\" resname=\"ibexa_platform_welcome_page.create_new_content_at\">",
                        "                <source>Create new content at %target%</source>",
                        "                <target state=\"new\">Create new content at %target%</target>",
                        "                <note>key: ibexa_platform_welcome_page.create_new_content_at</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"1390e41e8ca90a5bd5daa7a5c3ad06a5996bf6d8\" resname=\"ibexa_platform_welcome_page.developer_documentation\">",
                        "                <source>Developer documentation</source>",
                        "                <target state=\"new\">Developer documentation</target>",
                        "                <note>key: ibexa_platform_welcome_page.developer_documentation</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"d20f60607aef51d406f58b24d5cbf78d378faed9\" resname=\"ibexa_platform_welcome_page.discussion_forum\">",
                        "                <source>Discussion forum</source>",
                        "                <target state=\"new\">Discussion forum</target>",
                        "                <note>key: ibexa_platform_welcome_page.discussion_forum</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"85f6f00214473349dd7d2f21210ba566041b816d\" resname=\"ibexa_platform_welcome_page.documentation\">",
                        "                <source>Documentation</source>",
                        "                <target state=\"new\">Documentation</target>",
                        "                <note>key: ibexa_platform_welcome_page.documentation</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"7b5e9ed019b56355d940c88703b12f7adf3955bf\" resname=\"ibexa_platform_welcome_page.documentation_center\">",
                        "                <source>Documentation center</source>",
                        "                <target state=\"new\">Documentation center</target>",
                        "                <note>key: ibexa_platform_welcome_page.documentation_center</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"6c2779b7cb80ba0f46e1608a853d766f855cf39b\" resname=\"ibexa_platform_welcome_page.forums_and_community\">",
                        "                <source>Forums and community</source>",
                        "                <target state=\"new\">Forums and community</target>",
                        "                <note>key: ibexa_platform_welcome_page.forums_and_community</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"22eeb52805189aeb47128d417c3dbd618d30c8d0\" resname=\"ibexa_platform_welcome_page.getting_started\">",
                        "                <source>Getting started</source>",
                        "                <target state=\"new\">Getting started</target>",
                        "                <note>key: ibexa_platform_welcome_page.getting_started</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"1e438f216fca7d5e4c14b72dc5f2aafce168dafb\" resname=\"ibexa_platform_welcome_page.ibexa_blog\">",
                        "                <source>Ibexa blog</source>",
                        "                <target state=\"new\">Ibexa blog</target>",
                        "                <note>key: ibexa_platform_welcome_page.ibexa_blog</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"0585031bc3561306d2bdc84968795e126ae1da11\" resname=\"ibexa_platform_welcome_page.navigate_to\">",
                        "                <source>Navigate to: %target%</source>",
                        "                <target state=\"new\">Navigate to: %target%</target>",
                        "                <note>key: ibexa_platform_welcome_page.navigate_to</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"034d93e3dd14d39d2c3bb4740c4fef2e139f4e30\" resname=\"ibexa_platform_welcome_page.public_php_api\">",
                        "                <source>Public PHP API</source>",
                        "                <target state=\"new\">Public PHP API</target>",
                        "                <note>key: ibexa_platform_welcome_page.public_php_api</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"0e868794e655862b46712096f3838035715ca91b\" resname=\"ibexa_platform_welcome_page.rest_api_reference\">",
                        "                <source>REST API reference</source>",
                        "                <target state=\"new\">REST API reference</target>",
                        "                <note>key: ibexa_platform_welcome_page.rest_api_reference</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"7989236cbff5d38a5cfda3bfa9b211d80db1af04\" resname=\"ibexa_platform_welcome_page.tutorials\">",
                        "                <source>Tutorials</source>",
                        "                <target state=\"new\">Tutorials</target>",
                        "                <note>key: ibexa_platform_welcome_page.tutorials</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"5c2121c5baa63c943a5c93decfbad20cdf23bf42\" resname=\"ibexa_platform_welcome_page.tutorials_and_resources\">",
                        "                <source>Tutorials and resources</source>",
                        "                <target state=\"new\">Tutorials and resources</target>",
                        "                <note>key: ibexa_platform_welcome_page.tutorials_and_resources</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"7c2709c50bb6e3f654581e4f23f34d8c6dd65725\" resname=\"ibexa_platform_welcome_page.user_documentation\">",
                        "                <source>User documentation</source>",
                        "                <target state=\"new\">User documentation</target>",
                        "                <note>key: ibexa_platform_welcome_page.user_documentation</note>",
                        "            </trans-unit>",
                        "            <trans-unit id=\"ebc66899289f111043fdf09adbfabd940f857825\" resname=\"ibexa_platform_welcome_page.welcome_to\">",
                        "                <source>Welcome to</source>",
                        "                <target state=\"new\">Welcome to</target>",
                        "                <note>key: ibexa_platform_welcome_page.welcome_to</note>",
                        "            </trans-unit>",
                        "        </body>",
                        "    </file>",
                        "</xliff>",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "27f380c4637cf209c0b18bc2dd9739c1e8185591"
        }
    }
}
